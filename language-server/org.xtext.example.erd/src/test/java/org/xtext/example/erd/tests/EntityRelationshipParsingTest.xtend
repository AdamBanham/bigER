/*
 * generated by Xtext 2.24.0
 */
package org.xtext.example.erd.tests

import com.google.inject.Inject
import org.eclipse.xtext.testing.InjectWith
import org.eclipse.xtext.testing.extensions.InjectionExtension
import org.eclipse.xtext.testing.util.ParseHelper
import org.junit.jupiter.api.Assertions
import org.junit.jupiter.api.Test
import org.junit.jupiter.api.^extension.ExtendWith
import org.xtext.example.erd.entityRelationship.Model

@ExtendWith(InjectionExtension)
@InjectWith(EntityRelationshipInjectorProvider)
class EntityRelationshipParsingTest {
	@Inject
	ParseHelper<Model> parseHelper
	
	@Test
	def void loadModel() {
		val result = parseHelper.parse('''
erdiagram name

entity Customer {
    id key
    birthday
	age derived
	address multivalue
}

entity Invoice {
    id key
    name
    orderDate
}

entity Product {
    id key
    name
    price
}

relationship buys {
    Customer[1] -> Product[N]
}
		''')
		Assertions.assertNotNull(result)
		val errors = result.eResource.errors
		Assertions.assertTrue(errors.isEmpty, '''Unexpected errors: «errors.join(", ")»''')
	}
}
