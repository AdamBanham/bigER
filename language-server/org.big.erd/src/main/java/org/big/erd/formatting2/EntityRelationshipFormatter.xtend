/*
 * generated by Xtext 2.27.0
 */
package org.big.erd.formatting2

import org.big.erd.entityRelationship.Entity
import org.big.erd.entityRelationship.Model
import org.eclipse.xtext.formatting2.AbstractFormatter2
import org.eclipse.xtext.formatting2.IFormattableDocument
import org.big.erd.entityRelationship.Relationship
import org.big.erd.entityRelationship.Attribute
import org.big.erd.entityRelationship.RelationEntity
import static org.big.erd.entityRelationship.EntityRelationshipPackage.Literals.*


class EntityRelationshipFormatter extends AbstractFormatter2 {
	
	def dispatch void format(Model model, extension IFormattableDocument document) {
		// model header
		model.regionFor.keyword("erdiagram").append[oneSpace]
		model.regionFor.feature(MODEL__NAME).append[setNewLines(1, 1, 2)]
		
		// model options
		model.notation.append[setNewLines(1, 1, 2)]
		model.notation.regionFor.keyword("=").surround[noSpace]
		
		// entities and relationships
		for (entity : model.entities) {
			entity.format
		}
		for (relationship : model.relationships) {
			relationship.format
		}
	}

	def dispatch void format(Entity entity, extension IFormattableDocument document) {
		entity.regionFor.keyword("weak").append[oneSpace]
		entity.regionFor.keyword("entity").prepend[noSpace]
		entity.regionFor.feature(ENTITY__NAME).surround[oneSpace]
		
		if (entity.extends !== null) {
			entity.regionFor.keyword("extends").surround[oneSpace]
			entity.regionFor.feature(ENTITY__EXTENDS).surround[oneSpace]
		}
		
		val open = entity.regionFor.keyword("{")
		val close = entity.regionFor.keyword("}")
		if (entity.attributes.size > 0) {
			open.append[newLine]
			close.prepend[noSpace]
		}
		
		interior(open, close, [indent])
		
		for (attribute : entity.attributes) {
			attribute.format
			attribute.append[newLine]
		}
		
		close.append[setNewLines(1, 1, 2)]	
	}
	
	def dispatch void format(Relationship relationship, extension IFormattableDocument document) {
		relationship.regionFor.keyword("weak").append[oneSpace]
		relationship.regionFor.keyword("relationship").prepend[noSpace]
		relationship.regionFor.feature(RELATIONSHIP__NAME).surround[oneSpace]
		
		relationship.first?.format
		relationship.second?.format
		relationship.third?.format
		
		for (attribute : relationship.attributes) {
			relationship.first.prepend[indent]
			attribute.format
			attribute.append[newLine]
		}
		
		relationship.regionFor.keyword("}").append[setNewLines(1, 1, 2)]
	}
	
	def dispatch void format(Attribute attribute, extension IFormattableDocument document) {
		attribute.regionFor.keyword(":").append[oneSpace]
		attribute.regionFor.keyword(":").prepend[noSpace]
		if (attribute.datatype !== null) {
			attribute.datatype.regionFor.keyword("(").prepend[noSpace]
			attribute.datatype.regionFor.feature(DATA_TYPE__SIZE).surround[noSpace]
		}
		if (attribute.type !== null) {
			attribute.regionFor.feature(ATTRIBUTE__TYPE).prepend[oneSpace]
		}
	}
	
	def dispatch void format(RelationEntity relation, extension IFormattableDocument document) {
		relation.regionFor.keyword("|").surround[oneSpace]
		relation.regionFor.keyword("[").surround[noSpace]
		relation.regionFor.keyword("]").prepend[noSpace]
	}
}
