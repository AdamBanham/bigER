grammar org.big.erd.EntityRelationship with org.eclipse.xtext.common.Terminals

generate entityRelationship "http://www.big.org/erd/EntityRelationship"

Model:
	'erdiagram' name=ID ('{'
		('generate' '=' generateOption=GenerateOption)?
		('notation' '=' notationOption=NotationOption)?
	'}')?
	
	// keep old generate option until dependent code is fixed
	(generateSql?='generateSql')?

	(entities+=Entity | relationships+=Relationship)*;

Entity:
	(weak?='weak')? 'entity' name=ID ('extends' extends=[Entity])? ('{'
		(attributes += Attribute)*
	'}')?;

/**
 * TODO: allow more than ternary (more generic) - e.g. save all in targets[]
 */
Relationship:
	(weak?='weak')? 'relationship' name=ID ('{'
		(first=RelationEntity (('->' second=RelationEntity) ('->' third=RelationEntity)?)?)
		(attributes += Attribute)*
	'}')?;

/**
 * TODO: Support Min/Max Notation
 * cardinality = max, multiplicity = min/max
 */
RelationEntity:
	target=[Entity] ('[' 
		(cardinality=CardinalityType | customMultiplicity=STRING)
	']')? (partial?='partial')?;

/**
 * TODO: Remove old datatype (defaults, e.g. int, double, ...)
 */
Attribute:
	name=ID (':' datatype=DataType)? (type=AttributeType)?;

DataType:
	type=ID ('(' size=INT ')')?;

enum GenerateOption:
    OFF='off' | SQL='sql';

enum NotationOption:
    DEFAULT='default';   

enum AttributeType:
	NONE = 'none' | KEY = 'key' | FOREIGN_KEY = 'foreign-key' | PARTIAL_KEY = 'partial-key' | OPTIONAL = 'optional' | 
	DERIVED = 'derived' | MULTIVALUED = 'multivalued';

enum CardinalityType:
	ONE = '1' | MANY = 'N';